@* Touch-optimized button component for marine conditions *@

<button class="touch-btn @CssClass @SizeClass @VariantClass" 
        type="@ButtonType" 
        disabled="@Disabled"
        @onclick="OnClick"
        @onclick:stopPropagation="StopPropagation">
    @if (!string.IsNullOrEmpty(Icon))
    {
        <span class="btn-icon">@Icon</span>
    }
    @if (!string.IsNullOrEmpty(Text))
    {
        <span class="btn-text">@Text</span>
    }
    @ChildContent
</button>

@code {
    [Parameter] public string? Text { get; set; }
    [Parameter] public string? Icon { get; set; }
    [Parameter] public string? CssClass { get; set; }
    [Parameter] public ButtonSize Size { get; set; } = ButtonSize.Medium;
    [Parameter] public ButtonVariant Variant { get; set; } = ButtonVariant.Primary;
    [Parameter] public string ButtonType { get; set; } = "button";
    [Parameter] public bool Disabled { get; set; }
    [Parameter] public bool StopPropagation { get; set; } = true;
    [Parameter] public EventCallback OnClick { get; set; }
    [Parameter] public RenderFragment? ChildContent { get; set; }

    private string SizeClass => Size switch
    {
        ButtonSize.Small => "btn-sm",
        ButtonSize.Large => "btn-lg",
        ButtonSize.ExtraLarge => "btn-xl",
        _ => "btn-md"
    };

    private string VariantClass => Variant switch
    {
        ButtonVariant.Secondary => "btn-secondary",
        ButtonVariant.Success => "btn-success",
        ButtonVariant.Danger => "btn-danger",
        ButtonVariant.Warning => "btn-warning",
        ButtonVariant.Info => "btn-info",
        ButtonVariant.Light => "btn-light",
        ButtonVariant.Dark => "btn-dark",
        _ => "btn-primary"
    };

    public enum ButtonSize
    {
        Small,
        Medium,
        Large,
        ExtraLarge
    }

    public enum ButtonVariant
    {
        Primary,
        Secondary,
        Success,
        Danger,
        Warning,
        Info,
        Light,
        Dark
    }
}
